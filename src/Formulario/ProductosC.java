/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProductosB.java
 *
 * Created on 17-abr-2013, 7:40:28
 */
package Formulario;

import Clases.conectar;
import java.sql.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author Administrador
 */
public class ProductosC extends javax.swing.JInternalFrame {
DefaultTableModel tabla;
    /** Creates new form ProductosB */
    public ProductosC() {
        initComponents();
        cargarlistaproductos("");
        
    }
      String comparar(String cod)
    {
        String cant="";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT cod_pro, descripcion, Stock FROM producto WHERE cod_pro='"+cod+"'");
            while(rs.next())
            {
                cant=rs.getString(3);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cant;
        
    }
     void cargarlistaproductos(String dato){
        String [] Titulo = {"Codigo","Descripcion","Stock"};
        tabla=new DefaultTableModel(null,Titulo);
    String []Registro= new String[3];
    String mostrar="SELECT * FROM producto WHERE CONCAT (cod_pro,'',descripcion) LIKE '%"+dato+"%'"; 
    Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs =st.executeQuery(mostrar);
            while(rs.next())
            {
                Registro[0]=rs.getString("cod_pro");
                Registro[1]=rs.getString("Descripcion");
                Registro[2]=rs.getString("stock");
                tabla.addRow(Registro);
            }
            tbprod.setModel(tabla);
        } catch (SQLException ex) {
            Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        mnenviar = new javax.swing.JMenuItem();
        txtprod = new javax.swing.JTextField();
        btnmostrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbprod = new javax.swing.JTable();

        mnenviar.setText("Enviar a Ingresos");
        mnenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnenviarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnenviar);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("PRODUCTOS");

        txtprod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtprodKeyReleased(evt);
            }
        });

        btnmostrar.setText("Mostrar todo");
        btnmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmostrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar Productos");

        tbprod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbprod.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(tbprod);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtprod, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnmostrar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnmostrar)
                    .addComponent(txtprod, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void txtprodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprodKeyReleased
// TODO add your handling code here:
    cargarlistaproductos(txtprod.getText());
}//GEN-LAST:event_txtprodKeyReleased

private void btnmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmostrarActionPerformed
// TODO add your handling code here:
    cargarlistaproductos("");
}//GEN-LAST:event_btnmostrarActionPerformed

private void mnenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnenviarActionPerformed
// TODO add your handling code here:
    DefaultTableModel m; 
    double precing=0.00;
    int canting=0;
    try {
         //String titulos[]={"Codigo", "Descripcion"};
         //m=new DefaultTableModel(null,titulos);
         //tbprod.setModel(m);
         DefaultTableModel tabladet = (DefaultTableModel) IngresoStock.tbIngreso.getModel();
         String[]  dato=new String[5];
         int  fila = tbprod.getSelectedRow();
         if(fila==-1){
            JOptionPane.showMessageDialog(null, "No  ha seleccionado ningun registro");
        }
        else{
            String codins=tbprod.getValueAt(fila, 0).toString();
            String desins=tbprod.getValueAt(fila, 1).toString();
            String stok=tbprod.getValueAt(fila,2).toString();
            int c=0;
            int j=0;
            String  precio=JOptionPane.showInputDialog("ingrese precio parcial");
            if((precio.equals("")) || (precio.equals("0")))
            {
                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
            }
            else
            {
                precing=Double.parseDouble(precio);
            }
            String  cant=JOptionPane.showInputDialog("ingrese cantidad");
            if((cant.equals("")) || (cant.equals("0")))
            {
                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
            }
            else
            {
                canting=Integer.parseInt(cant);
            }
            for(int i=0;i<IngresoStock.tbIngreso.getRowCount();i++)
            {
                Object com=IngresoStock.tbIngreso.getValueAt(i,0);
                if(codins.equals(com))
                    {
                            j=i;
                            IngresoStock.tbIngreso.setValueAt(precing, i, 2);
                            IngresoStock.tbIngreso.setValueAt(canting, i, 3);
                            c=c+1;
       
                     }
   
            }
                    if(c==0)
                    {
                        dato[0]=codins;
                        dato[1]=desins;
                        dato[2]=precio;
                        dato[3]=cant;
                        dato[4]=stok;
                        tabladet.addRow(dato);
                        IngresoStock.tbIngreso.setModel(tabladet);
                        if(IngresoStock.tbIngreso.getRowCount()>0 && !IngresoStock.btnQuitar.isEnabled());{
                            IngresoStock.btnQuitar.setEnabled(true);
                        }
            
                    }
            }
  
    }
    catch (Exception e) {
        JOptionPane.showMessageDialog(null,e);//"Uno de los valores ingresados es invalido, revise por favor...");
    }
}//GEN-LAST:event_mnenviarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem mnenviar;
    private javax.swing.JTable tbprod;
    private javax.swing.JTextField txtprod;
    // End of variables declaration//GEN-END:variables
conectar cc= new conectar();
Connection cn = cc.conexion();
}
